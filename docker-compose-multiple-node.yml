services:
  # Controller Nodes: Responsible for cluster metadata and coordination. 
  controller-1:
    image: apache/kafka:latest             
    container_name: controller-1           
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      # Listener for controller-specific traffic.
      # Bind to port 9093 on all interfaces This makes Kafka accessible from any network that the machine is connected to.
      KAFKA_LISTENERS: CONTROLLER://:9093
      # Inter-broker communication uses the PLAINTEXT listener.
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # Declare that controller communications happen over the "CONTROLLER" listener.
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  controller-2:
    image: apache/kafka:latest
    container_name: controller-2
    environment:
      KAFKA_NODE_ID: 2                      # Unique identifier for this controller.
      KAFKA_PROCESS_ROLES: controller       # Acts solely as a controller.
      KAFKA_LISTENERS: CONTROLLER://:9093     # Controller listener on port 9093.
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # Same quorum voter configuration across all controllers.
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  # Broker Nodes: Handle client requests (produce/consume) and store messages.
  broker-1:
    image: apache/kafka:latest
    container_name: broker-1
    ports:
      - 29092:9092                         # Map container's client port 9092 to host port 29092.
    environment:
      KAFKA_NODE_ID: 3                     
      KAFKA_PROCESS_ROLES: broker         
      # Define two listeners:
      #  - PLAINTEXT://:19092: For inter-broker communications within the Docker network.
      #  - PLAINTEXT_HOST://:9092: For external client connections.
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      # Advertised listeners inform clients how to connect:
      #  - Use the container name (broker-1) and port 19092 for inter-broker use.
      #  - Use localhost and host-mapped port 29092 for external clients.
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      # Inter-broker communications will use the PLAINTEXT listener.
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # Specify the listener for controller communications.
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # Map each listener to its security protocol.
      # All listeners here use PLAINTEXT (i.e., no encryption or authentication).
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # Broker uses the defined controller quorum to locate the controller nodes.
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      # Set the group initial rebalance delay to 0ms.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2

  broker-2:
    image: apache/kafka:latest
    container_name: broker-2
    ports:
      - 39092:9092                        
    environment:
      KAFKA_NODE_ID: 4                    
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
  application:
    build: ./fastApi
    volumes:
      - ./fastApi:/app
    ports:
      - "8000:8000"
    depends_on:
      - controller-1
      - controller-2
      - broker-1
      - broker-2
